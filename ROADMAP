					-*-org-*-

* v1.0.0
** v0.1.0
*** TODO v0.0.3
**** Must be multi-user
- [ ] While the admin user can be crated in fox editor, other users may be
  created by admin user
**** Multiple persistance system
- [ ] Sqlite first ?
**** Logger widget options
- [ ] May add some icon types and a legend to see information, warning error
  etc...
- [ ] The content may be exported to a text file
- [ ] Content may be copied to clipboard. Add button  
**** Add a sidebars-based Menu to the generated app
    https://getbootstrap.com/docs/5.0/examples/sidebars/
**** TODO Project-file serialization
:LOGBOOK:
CLOCK: [2023-04-24 lun. 09:45]--[2023-04-24 lun. 10:09] =>  0:24
CLOCK: [2023-04-24 lun. 09:11]--[2023-04-24 lun. 09:17] =>  0:06
CLOCK: [2023-03-22 mer. 11:12]--[2023-03-22 mer. 11:21] =>  0:09
CLOCK: [2023-03-22 mer. 10:07]--[2023-03-22 mer. 10:25] =>  0:18
CLOCK: [2023-03-17 ven. 09:01]--[2023-03-17 ven. 09:18] =>  0:17
CLOCK: [2023-03-17 ven. 08:50]--[2023-03-17 ven. 08:58] =>  0:08
CLOCK: [2022-09-29 jeu. 07:57]--[2022-09-29 jeu. 08:31] =>  0:34
CLOCK: [2022-09-29 jeu. 05:14]--[2022-09-29 jeu. 05:21] =>  0:07
CLOCK: [2022-09-27 mar. 04:17]--[2022-09-27 mar. 04:38] =>  0:21
CLOCK: [2022-09-27 mar. 03:56]--[2022-09-27 mar. 04:14] =>  0:18
CLOCK: [2022-07-15 ven. 06:01]--[2022-07-15 ven. 06:16] =>  0:15
CLOCK: [2022-07-15 ven. 05:08]--[2022-07-15 ven. 05:50] =>  0:42
:END:
     As an ini file read by boost or a binary file or a zip directory?
     Must be versionnable with a magic number to keep opening old files.
- [X] Cmake search for boost_serialization
- [X] Implement ProjectFile::setFilename() and unit test
- [X] Create the ProjectFile class using fox steam object
- [X] Maybe fox has a stream thing that can be used to file it in binbary     
- [X] Add ProjectFile::load function
  Unit tests added, now implement
- [X] Handle ProjectFile::save file creation using FX stream
  Should fix actual failing unit tests
- [X] If we don't use boost serialization, remove it from cmake and README
- [X] ProjectFile may handle dirty flag so it can be tested
  - [X] Add unit tests
  - [X] Implement
  - [X] Must be used by MainWindow
    MainWindow already has a dirty flag
- [ ] Start to list MainWindow fields to be saved
  Project pane : Name, Author, Version, License + Description
  - Let's preprend function with setProject*
  - [ ] Added ProjectName unit test. Fix it
  Collection : /none/
  Generator : Output filename
  - Let's preprend function with setGenerator*
  Log : not sure we should save this
**** TODO Continue generation work
:LOGBOOK:
CLOCK: [2023-04-24 lun. 09:00]--[2023-04-24 lun. 09:11] =>  0:11
:END:
- [ ] Continue to implement complete process with unit tests
  - [ ] Maybe call npm audit fix to update packages to last version ?
  - [ ] Then call =npm install= : it can be very long. We must have a
    =ProcessWatcher= class here to follow progress
  - [ ] Call =npm start= to run app
    
- [ ] Search for other icons in Adie source code
  https://github.com/gogglesguy/fox/blob/master/adie/  
- [ ] We have a segfault in FX::FXAccelTable::removeAccel when quitting
- [ ] Adie has a quit icon, steal this
**** TODO Long term unit tests and CI items
- [X] Unit tests are not correctly ran locally or on actions
- [X] Don't know why but with boost 1.65.1 we have to add a main function
  to avoid a linker error. I fear it can make CI fail btw.
- [ ] Can't correctly make the default make rule depends on icons so
  for instance, the .github worflow has to run =make icons= manually
**** TODO Keep improving doxygen documentation
:LOGBOOK:
CLOCK: [2023-03-10 ven. 11:05]--[2023-03-10 ven. 11:09] =>  0:04
CLOCK: [2023-03-10 ven. 10:58]--[2023-03-10 ven. 11:02] =>  0:04
CLOCK: [2023-02-24 ven. 16:14]--[2023-02-24 ven. 16:26] =>  0:12
CLOCK: [2023-01-02 lun. 04:03]--[2023-01-02 lun. 04:11] =>  0:08
CLOCK: [2022-12-12 lun. 03:32]--[2022-12-12 lun. 03:51] =>  0:19
CLOCK: [2022-11-30 mer. 04:25]--[2022-11-30 mer. 04:59] =>  0:34
CLOCK: [2022-10-12 mer. 10:31]--[2022-10-12 mer. 10:52] =>  0:21
CLOCK: [2022-09-06 mar. 07:19]--[2022-09-06 mar. 07:27] =>  0:08
CLOCK: [2022-07-13 mer. 03:16]--[2022-07-13 mer. 03:41] =>  0:25
CLOCK: [2022-07-06 mer. 00:36]--[2022-07-06 mer. 00:42] =>  0:06
:END:
     Always fix undocumented members

- [X] Add src/Mainpage.md as Doxygen mainpage
- [X] Exclude template app's node_modules directory from doxygen doc
- [X] Add TestableGenerator.hpp to EXCLUDE list to have cleaner log output
- [ ] We have a dot error
  error: Failed to extract bounding box from generated diagram file /home/rainbru/programmation/github/elecrud/build/latex/classMainWindow__inherit__graph.pdf

  error: Problems running dot: exit code=0, command='dot',
    arguments='".../elecrud/build/latex/classMainWindow__coll__
    graph.dot" -Tpdf -o ".../build/latex/classMainWindow__coll__graph.pdf"'
*** DONE v0.0.2
**** DONE First generation work
:LOGBOOK:
CLOCK: [2023-04-10 lun. 11:35]--[2023-04-10 lun. 11:44] =>  0:09
CLOCK: [2023-04-04 mar. 09:43]--[2023-04-04 mar. 09:53] =>  0:10
CLOCK: [2023-04-04 mar. 09:32]--[2023-04-04 mar. 09:41] =>  0:09
CLOCK: [2023-03-10 ven. 10:42]--[2023-03-10 ven. 10:49] =>  0:07
CLOCK: [2023-03-10 ven. 10:35]--[2023-03-10 ven. 10:36] =>  0:01
CLOCK: [2023-03-10 ven. 10:19]--[2023-03-10 ven. 10:35] =>  0:16
CLOCK: [2023-02-17 ven. 13:02]--[2023-02-17 ven. 13:22] =>  0:20
CLOCK: [2023-02-17 ven. 12:06]--[2023-02-17 ven. 12:45] =>  0:39
CLOCK: [2023-02-10 ven. 03:08]--[2023-02-10 ven. 03:38] =>  0:30
CLOCK: [2023-02-06 lun. 07:12]--[2023-02-06 lun. 07:42] =>  0:30
CLOCK: [2023-02-06 lun. 06:18]--[2023-02-06 lun. 06:29] =>  0:11
CLOCK: [2023-02-01 mer. 09:53]--[2023-02-01 mer. 10:03] =>  0:10
CLOCK: [2023-02-01 mer. 09:13]--[2023-02-01 mer. 09:28] =>  0:15
CLOCK: [2023-01-26 jeu. 09:37]--[2023-01-26 jeu. 09:45] =>  0:08
CLOCK: [2023-01-26 jeu. 08:34]--[2023-01-26 jeu. 09:19] =>  0:45
CLOCK: [2023-01-12 jeu. 05:26]--[2023-01-12 jeu. 05:44] =>  0:18
CLOCK: [2023-01-06 ven. 05:12]--[2023-01-06 ven. 05:42] =>  0:30
CLOCK: [2023-01-06 ven. 04:11]--[2023-01-06 ven. 04:22] =>  0:11
CLOCK: [2023-01-02 lun. 04:49]--[2023-01-02 lun. 05:04] =>  0:15
CLOCK: [2022-12-27 mar. 02:18]--[2022-12-27 mar. 02:42] =>  0:24
CLOCK: [2022-12-20 mar. 05:31]--[2022-12-20 mar. 05:54] =>  0:23
CLOCK: [2022-12-20 mar. 05:19]--[2022-12-20 mar. 05:30] =>  0:11
:END:
- [X] Implement actually failing unit tests
  - [X] fileExists
  - [X] fileContains
    App. get a SIGABRT when reaching EOF
  - [X] copy_index complete test
    - [X] Move the complete test to GeneratorV1 class
    - [X] Add and test a Ganerator::getFileContent function first
    - [X] Must implement a copyFile function that replace vars
    - [X] Implement GeneratorV1::generate
- [X] Generator::removeDirectory doesn't work with directory with content
  Fix that, maybe with boost filesystem remove_all https://stackoverflow.com/a/2256980
  - [X] First testing with C++17
- [X] replaceVars should also replace curly brackets, not only variable name

- [X] Must implement complete process with unit tests
  Current tests are added in GeneratorV1_Test.cpp
  - [X] Must access the log panel and use it
  - [X] Must start to copy needed files
    package.json: must replace {{APPNAME}}
  - [X] Must copy src/main.js
  - [X] Remove reference to the Chore module  
  - [X] Calling =npm start= on /newone/ directory to test complet process
    Could be a parameter
**** DONE First version of the to-be-generated electron app
:LOGBOOK:
CLOCK: [2023-03-17 ven. 08:33]--[2023-03-17 ven. 08:41] =>  0:08
CLOCK: [2022-12-22 jeu. 06:05]--[2022-12-22 jeu. 06:22] =>  0:17
CLOCK: [2022-12-15 jeu. 01:18]--[2022-12-15 jeu. 01:40] =>  0:22
CLOCK: [2022-10-10 lun. 04:28]--[2022-10-10 lun. 04:42] =>  0:14
CLOCK: [2022-09-15 jeu. 03:26]--[2022-09-15 jeu. 04:02] =>  0:36
CLOCK: [2022-09-15 jeu. 02:51]--[2022-09-15 jeu. 03:00] =>  0:09
CLOCK: [2022-07-26 mar. 07:26]--[2022-07-26 mar. 07:32] =>  0:06
:END:
- [X] Maybe something like daily chores in its very early state
  Started in src/app
- [X] Must be added to git repo
- [X] Implement the Save As. event handler
- [X] Must be able to include libfile's headers in elecrud
- [X] ProjectFile must have a setter from FXString
  Add unit tests for this
- [X] Add a Generator panel where we can select output file and other
  Or make as a dialog with pre-recorded fields ?
  - [X] Add the iconlist entry
  - [X] Add the icon
  - [X] Add right panel
- [X] Complete test : Copy src/app elsewhere then npm install then npm start
  - [X] Replace 'Today's chores' with {{APPNAME}} and put a smaller font
  - [X] Remove the 'Chores' text
  - [X] We should have a left menu : see if we can use sidebars
    https://getbootstrap.com/docs/5.0/examples/sidebars/
**** DONE Font issue on manjaro
- [X] Can't see entered text in textfields etc...
  see font section of https://sites.google.com/site/foxtoolkitusers/faq
  Seems to be fixed with reinstallation.
**** DONE Basic Generator work
:LOGBOOK:
CLOCK: [2022-12-20 mar. 04:49]--[2022-12-20 mar. 05:10] =>  0:21
CLOCK: [2022-12-15 jeu. 03:40]--[2022-12-15 jeu. 03:54] =>  0:14
CLOCK: [2022-12-15 jeu. 00:54]--[2022-12-15 jeu. 00:56] =>  0:02
CLOCK: [2022-12-12 lun. 03:07]--[2022-12-12 lun. 03:22] =>  0:15
CLOCK: [2022-11-23 mer. 05:50]--[2022-11-23 mer. 06:01] =>  0:11
CLOCK: [2022-11-17 jeu. 13:53]--[2022-11-17 jeu. 14:04] =>  0:11
CLOCK: [2022-11-14 lun. 15:51]--[2022-11-14 lun. 16:02] =>  0:11
CLOCK: [2022-11-14 lun. 14:52]--[2022-11-14 lun. 15:11] =>  0:19
CLOCK: [2022-11-09 mer. 10:52]--[2022-11-09 mer. 11:06] =>  0:14
CLOCK: [2022-11-09 mer. 10:06]--[2022-11-09 mer. 10:24] =>  0:18
CLOCK: [2022-11-04 ven. 10:07]--[2022-11-04 ven. 10:23] =>  0:16
CLOCK: [2022-11-04 ven. 09:45]--[2022-11-04 ven. 09:58] =>  0:13
:END:
- [X] Start Generator work in src/editor/
  - [X] A Generator base class with ouputdir handling
  - [X] A Generator subclass (maybe a versionned one (v1 ?)

- [X] Generator must be able to check if a directory exist
- [X] Generator must be able to create the needed directory
  And remove it for test purpose
- [X] Generator must be able to copy a file and modify it on the fly
  As a template engine would do with a single file {{VERSION}} could work
  - [X] Must have a key/value pair to be able to replace them
  - [X] Must be able to add a key with a value    
  - [X] This variables map must be empty by default
- [X] Generator must use variables map to produce a regex to replace text
  in an arbitrary text (the file content)
  - [X] May keep a list of std::regex_replace objects
  - [X] Then, implement replaceVars method

**** DONE Continue with details panel implementation
:LOGBOOK:
CLOCK: [2022-11-01 mar. 12:24]--[2022-11-01 mar. 12:36] =>  0:12
CLOCK: [2022-11-01 mar. 11:32]--[2022-11-01 mar. 11:43] =>  0:11
CLOCK: [2022-10-27 jeu. 11:08]--[2022-10-27 jeu. 11:22] =>  0:14
CLOCK: [2022-10-27 jeu. 10:40]--[2022-10-27 jeu. 10:57] =>  0:17
CLOCK: [2022-10-25 mar. 11:22]--[2022-10-25 mar. 11:54] =>  0:32
CLOCK: [2022-10-21 ven. 08:46]--[2022-10-21 ven. 09:04] =>  0:18
CLOCK: [2022-10-17 lun. 10:47]--[2022-10-17 lun. 11:16] =>  0:29
CLOCK: [2022-10-10 lun. 03:49]--[2022-10-10 lun. 04:05] =>  0:16
CLOCK: [2022-09-20 mar. 04:09]--[2022-09-20 mar. 04:20] =>  0:11
CLOCK: [2022-09-13 mar. 10:10]--[2022-09-13 mar. 10:21] =>  0:11
CLOCK: [2022-09-13 mar. 09:40]--[2022-09-13 mar. 10:04] =>  0:24
CLOCK: [2022-09-12 lun. 03:44]--[2022-09-12 lun. 04:28] =>  0:44
CLOCK: [2022-09-02 ven. 03:19]--[2022-09-02 ven. 03:44] =>  0:25
CLOCK: [2022-09-02 ven. 02:48]--[2022-09-02 ven. 03:06] =>  0:18
:END:
- [X] Add author, version and license as text field
- [X] Add project description as multiline
    Staerted as editor/Generator
- [X] Try to handle FXText description events. See Adie, it seems there
  is multiple involved events or selector.  
- [X] Can't get project description and print it. Maybe it's in wide charset    
- [X] First panel is the project info one (+name+, author, version etc...)
  - [X] When modifing the projectname, should set project file dirty file
- [X] FX has a thing for recent files
    https://github.com/gogglesguy/fox/blob/master/adie/TextWindow.cpp#L520
- [X] Calling File->new must reset all fields
- [X] Handle Generate pane
  - [X] At least an output field with a file selection button
  - [X] Generator menu item shouldn't be disabled. Will be used for help
    and add their callback
  - [X] Implement a preGenerationChecks method
*** DONE v0.0.1
**** DONE Unit tests and CI setup
     :LOGBOOK:
     CLOCK: [2022-09-16 ven. 02:03]--[2022-09-16 ven. 02:09] =>  0:06
     CLOCK: [2022-08-16 mar. 00:37]--[2022-08-16 mar. 00:40] =>  0:03
     CLOCK: [2022-08-11 jeu. 12:57]--[2022-08-11 jeu. 13:19] =>  0:22
     CLOCK: [2022-08-11 jeu. 12:26]--[2022-08-11 jeu. 12:42] =>  0:16
     CLOCK: [2022-08-02 mar. 12:13]--[2022-08-02 mar. 12:30] =>  0:17
     CLOCK: [2022-07-15 ven. 06:23]--[2022-07-15 ven. 06:30] =>  0:07
     CLOCK: [2022-06-04 sam. 09:41]--[2022-06-04 sam. 10:08] =>  0:27
     :END:
- [X] Trying with boost.Test so we have access to all Boost-related libraries
- [X] Write our first test
  - [X] For example for editor/MainTest (currently a tutorial test)
- [X] Added a first workflow test file in .github
- [X] May use  https://github.com/actions/starter-workflows/blob/main/ci/c-cpp.yml
- [X] We have a dependency error =no packing 'fox' found=
- [X] CI actually fails because it can't find icons.hpp
  Because the =make check= rule doesn't depends on icons.hpp one
- [X] While check runs icons automatically, =make= doesn't
  It makes the CI fail again.
- [X] We actually have a CI issue
  fail to fetch some ubuntu archives
  Trying to call a-get update before installing dependencies

**** DONE Continue MainWindow and Icon menu work
:LOGBOOK:
CLOCK: [2022-09-02 ven. 02:16]--[2022-09-02 ven. 02:42] =>  0:26
CLOCK: [2022-08-26 ven. 15:28]--[2022-08-26 ven. 15:58] =>  0:30
CLOCK: [2022-08-26 ven. 14:21]--[2022-08-26 ven. 14:42] =>  0:21
CLOCK: [2022-08-26 ven. 13:45]--[2022-08-26 ven. 13:54] =>  0:09
CLOCK: [2022-08-26 ven. 13:32]--[2022-08-26 ven. 13:37] =>  0:05
CLOCK: [2022-08-22 lun. 15:11]--[2022-08-22 lun. 15:36] =>  0:25
CLOCK: [2022-08-22 lun. 14:33]--[2022-08-22 lun. 15:08] =>  0:35
CLOCK: [2022-08-22 lun. 14:19]--[2022-08-22 lun. 14:23] =>  0:04
CLOCK: [2022-08-16 mar. 01:41]--[2022-08-16 mar. 01:48] =>  0:07
CLOCK: [2022-08-16 mar. 01:18]--[2022-08-16 mar. 01:34] =>  0:16
CLOCK: [2022-08-16 mar. 01:05]--[2022-08-16 mar. 01:10] =>  0:05
CLOCK: [2022-08-10 mer. 11:39]--[2022-08-10 mer. 12:25] =>  0:46
CLOCK: [2022-08-08 lun. 10:22]--[2022-08-08 lun. 10:32] =>  0:10
:END:
- [X] Menu icons are created using `reswrap`. it should be called from cmake
- [X] Start to use icons like adie does
  - [X] Elecrud application should include icons.hpp and have protected ones
  - [X] MainWindow get icon from Electrud
- [X] Add File/open icon
- [X] Add a Project icon to left panel icon list
  We need projecticon and projecticon_big
- [X] Icon left pabnel should have a minimal width to make the big icons
  visible without resizing the pane
- [X] We'll have to find a second iconlist icon (maybe collection)
  and work on the switch of roght-side panel
  - [X] Add collections wityh big icon
  - [X] Create two diffirent panel to edit project properties and collections
  - [X] Switch between these two panes
    - [X] Try to call layout on the parent composite each time
- [X] Should have a log panel when we try to generate/run project
  If we use a image-based menu, it could be the last and we can auto select
  it when trying to generate or run
  - [X] Add icon
  - [X] Change panel
  - [X] Create panel : maybe a FXList
- [X] Add project name textfield
**** DONE Editor GUI setup
     :LOGBOOK:
     CLOCK: [2022-08-08 lun. 09:29]--[2022-08-08 lun. 09:52] =>  0:23
     CLOCK: [2022-08-08 lun. 09:01]--[2022-08-08 lun. 09:25] =>  0:24
     CLOCK: [2022-08-01 lun. 06:13]--[2022-08-01 lun. 06:39] =>  0:26
     CLOCK: [2022-07-26 mar. 09:29]--[2022-07-26 mar. 09:32] =>  0:03
     CLOCK: [2022-07-26 mar. 09:13]--[2022-07-26 mar. 09:25] =>  0:12
     CLOCK: [2022-07-21 jeu. 07:03]--[2022-07-21 jeu. 07:24] =>  0:21
     CLOCK: [2022-07-13 mer. 03:57]--[2022-07-13 mer. 04:07] =>  0:10
     CLOCK: [2022-07-11 lun. 03:14]--[2022-07-11 lun. 03:42] =>  0:28
     CLOCK: [2022-07-07 jeu. 06:01]--[2022-07-07 jeu. 06:11] =>  0:10
     CLOCK: [2022-07-07 jeu. 04:46]--[2022-07-07 jeu. 05:22] =>  0:36
     CLOCK: [2022-07-06 mer. 01:03]--[2022-07-06 mer. 01:24] =>  0:21
     CLOCK: [2022-07-05 mar. 02:59]--[2022-07-05 mar. 03:03] =>  0:04
     CLOCK: [2022-04-13 mer. 21:28]--[2022-04-13 mer. 21:45] =>  0:17
     :END:
- [X] First FOX window must be shown
- [X] Should show version from config.h in window title
- [X] We need at least a File menu to handle open/save/close
  Add first menu items
  - [X] Add a Exit menu item
- [X] Open/Save must show a FXFileDialog instance
- [X] Add Project/Generate and Run menus
  Project may be disabled 
- [X] We have a segfault at startup
- [X] Must add a status bar
- [X] Must keep in sync window title with filename and a star indicating a
  dirty document
- [X] A image-based menu to edit the project
  http://fox-toolkit.org/screenshots/iims1.png
  - [X] Find something that can be used as example in
    https://github.com/gogglesguy/fox. I think it's an FXIconList widget
- [X] Add a 'Project' item to iconlist
**** DONE Unit tests and CI setup
     :LOGBOOK:
     CLOCK: [2022-07-15 ven. 06:23]--[2022-07-15 ven. 06:30] =>  0:07
     CLOCK: [2022-06-04 sam. 09:41]--[2022-06-04 sam. 10:08] =>  0:27
     :END:
- [X] Trying with boost.Test so we have access to all Boost-related libraries
- [X] Write our first test
  - [X] For example for editor/MainTest (currently a tutorial test)
- [X] Added a first workflow test file in .github
- [X] May use  https://github.com/actions/starter-workflows/blob/main/ci/c-cpp.yml
- [X] We have a dependency error =no packing 'fox' found=
**** DONE Correct project setup
     :LOGBOOK:
     CLOCK: [2022-04-21 jeu. 22:26]--[2022-04-21 jeu. 22:37] =>  0:11
     CLOCK: [2022-04-13 mer. 19:44]--[2022-04-13 mer. 19:55] =>  0:11
     CLOCK: [2022-04-13 mer. 17:36]--[2022-04-13 mer. 17:48] =>  0:12
     :END:
- [X] Add GPLv3 license file
- [X] Basic cmake file
- [X] Add a README.md file
- [X] Search for fox toolkit library
- [X] Handle Doxyfile and doc generation (version from cmake file)
- [X] Handle --help on editor
