					-*-org-*-

* v1.0.0
** v0.1.0
*** v0.0.1
**** Must be multi-user
- [ ] While the admin user can be crated in fox editor, other users may be
  created by admin user
**** Multiple persistance system
- [ ] Sqlite first ?
**** Project-file serialization
:LOGBOOK:
CLOCK: [2022-07-15 ven. 06:01]--[2022-07-15 ven. 06:16] =>  0:15
CLOCK: [2022-07-15 ven. 05:08]--[2022-07-15 ven. 05:50] =>  0:42
:END:
     As an ini file read by boost or a binary file or a zip directory?
     Must be versionnable with a magic number to keep opening old files.
- [X] Cmake search for boost_serialization
- [X] Implement ProjectFile::setFilename() and unit test
- [ ] ProjectFile may handle dirty flag so it can be tested
- [ ] Create the ProjectFile class using
  https://www.boost.org/doc/libs/1_79_0/libs/serialization/doc/
- [ ] Maybe fox has a stream thing that can be used to file it in binbary     
**** TODO First version of the to-be-generated electron app
:LOGBOOK:
CLOCK: [2022-07-26 mar. 07:26]--[2022-07-26 mar. 07:32] =>  0:06
:END:
- [X] Maybe something like daily chores in its very early state
  Started in src/app
- [X] Must be added to git repo  
**** TODO Continue MainWindow and Icon menu work
:LOGBOOK:
CLOCK: [2022-08-26 ven. 14:21]--[2022-08-26 ven. 14:42] =>  0:21
CLOCK: [2022-08-26 ven. 13:45]--[2022-08-26 ven. 13:54] =>  0:09
CLOCK: [2022-08-26 ven. 13:32]--[2022-08-26 ven. 13:37] =>  0:05
CLOCK: [2022-08-22 lun. 15:11]--[2022-08-22 lun. 15:36] =>  0:25
CLOCK: [2022-08-22 lun. 14:33]--[2022-08-22 lun. 15:08] =>  0:35
CLOCK: [2022-08-22 lun. 14:19]--[2022-08-22 lun. 14:23] =>  0:04
CLOCK: [2022-08-16 mar. 01:41]--[2022-08-16 mar. 01:48] =>  0:07
CLOCK: [2022-08-16 mar. 01:18]--[2022-08-16 mar. 01:34] =>  0:16
CLOCK: [2022-08-16 mar. 01:05]--[2022-08-16 mar. 01:10] =>  0:05
CLOCK: [2022-08-10 mer. 11:39]--[2022-08-10 mer. 12:25] =>  0:46
CLOCK: [2022-08-08 lun. 10:22]--[2022-08-08 lun. 10:32] =>  0:10
:END:
- [X] Menu icons are created using `reswrap`. it should be called from cmake
- [X] Start to use icons like adie does
  - [X] Elecrud application should include icons.hpp and have protected ones
  - [X] MainWindow get icon from Electrud
- [X] Add File/open icon
- [X] Add a Project icon to left panel icon list
  We need projecticon and projecticon_big
- [X] Icon left pabnel should have a minimal width to make the big icons
  visible without resizing the pane
- [X] We'll have to find a second iconlist icon (maybe collection)
  and work on the switch of roght-side panel
  - [X] Add collections wityh big icon
  - [X] Create two diffirent panel to edit project properties and collections
  - [X] Switch between these two panes
    - [X] Try to call layout on the parent composite each time
- [-] Should have a log panel when we try to generate/run project
  If we use a image-based menu, it could be the last and we can auto select
  it when trying to generate or run
  - [X] Add icon
  - [X] Change panel
  - [ ] Create panel : maybe a FXList ?
- [ ] First panel is the project info one (name, author, version etc...)
- [ ] Search for other icons in Adie source code
  https://github.com/gogglesguy/fox/blob/master/adie/  
- [ ] We have a segfault in FX::FXAccelTable::removeAccel when quitting
- [ ] Adie has a quit icon, steal this
- [ ] FX has a thing for recent files
    https://github.com/gogglesguy/fox/blob/master/adie/TextWindow.cpp#L520
**** TODO Unit tests and CI setup
     :LOGBOOK:
     CLOCK: [2022-08-16 mar. 00:37]--[2022-08-16 mar. 00:40] =>  0:03
     CLOCK: [2022-08-11 jeu. 12:57]--[2022-08-11 jeu. 13:19] =>  0:22
     CLOCK: [2022-08-11 jeu. 12:26]--[2022-08-11 jeu. 12:42] =>  0:16
     CLOCK: [2022-08-02 mar. 12:13]--[2022-08-02 mar. 12:30] =>  0:17
     CLOCK: [2022-07-15 ven. 06:23]--[2022-07-15 ven. 06:30] =>  0:07
     CLOCK: [2022-06-04 sam. 09:41]--[2022-06-04 sam. 10:08] =>  0:27
     :END:
- [X] Trying with boost.Test so we have access to all Boost-related libraries
- [X] Write our first test
  - [X] For example for editor/MainTest (currently a tutorial test)
- [X] Added a first workflow test file in .github
- [X] May use  https://github.com/actions/starter-workflows/blob/main/ci/c-cpp.yml
- [X] We have a dependency error =no packing 'fox' found=
- [X] CI actually fails because it can't find icons.hpp
  Because the =make check= rule doesn't depends on icons.hpp one
- [X] While check runs icons automatically, =make= doesn't
  It makes the CI fail again.

- [ ] Can't correctly make the default make rule depends on icons so
  for insta,ce, the .github worflow has to run =make icons= manually
- [ ] Don't know why but with boost 1.65.1 we have to add a main function
  to avoid a linker error. I fear it can make CI fail btw.
**** TODO Keep improving doxygen documentation
:LOGBOOK:
CLOCK: [2022-07-13 mer. 03:16]--[2022-07-13 mer. 03:41] =>  0:25
CLOCK: [2022-07-06 mer. 00:36]--[2022-07-06 mer. 00:42] =>  0:06
:END:
     Always fix undocumented members
- [ ] We have a dot error
  error: Failed to extract bounding box from generated diagram file /home/rainbru/programmation/github/elecrud/build/latex/classMainWindow__inherit__graph.pdf

  error: Problems running dot: exit code=0, command='dot', arguments='"/home/
  rainbru/programmation/github/elecrud/build/latex/classMainWindow__coll__
  graph.dot" -Tpdf -o "/home/rainbru/programmation/github/elecrud/build/latex/classMainWindow__coll__graph.pdf"'
**** DONE Editor GUI setup
     :LOGBOOK:
     CLOCK: [2022-08-08 lun. 09:29]--[2022-08-08 lun. 09:52] =>  0:23
     CLOCK: [2022-08-08 lun. 09:01]--[2022-08-08 lun. 09:25] =>  0:24
     CLOCK: [2022-08-01 lun. 06:13]--[2022-08-01 lun. 06:39] =>  0:26
     CLOCK: [2022-07-26 mar. 09:29]--[2022-07-26 mar. 09:32] =>  0:03
     CLOCK: [2022-07-26 mar. 09:13]--[2022-07-26 mar. 09:25] =>  0:12
     CLOCK: [2022-07-21 jeu. 07:03]--[2022-07-21 jeu. 07:24] =>  0:21
     CLOCK: [2022-07-13 mer. 03:57]--[2022-07-13 mer. 04:07] =>  0:10
     CLOCK: [2022-07-11 lun. 03:14]--[2022-07-11 lun. 03:42] =>  0:28
     CLOCK: [2022-07-07 jeu. 06:01]--[2022-07-07 jeu. 06:11] =>  0:10
     CLOCK: [2022-07-07 jeu. 04:46]--[2022-07-07 jeu. 05:22] =>  0:36
     CLOCK: [2022-07-06 mer. 01:03]--[2022-07-06 mer. 01:24] =>  0:21
     CLOCK: [2022-07-05 mar. 02:59]--[2022-07-05 mar. 03:03] =>  0:04
     CLOCK: [2022-04-13 mer. 21:28]--[2022-04-13 mer. 21:45] =>  0:17
     :END:
- [X] First FOX window must be shown
- [X] Should show version from config.h in window title
- [X] We need at least a File menu to handle open/save/close
  Add first menu items
  - [X] Add a Exit menu item
- [X] Open/Save must show a FXFileDialog instance
- [X] Add Project/Generate and Run menus
  Project may be disabled 
- [X] We have a segfault at startup
- [X] Must add a status bar
- [X] Must keep in sync window title with filename and a star indicating a
  dirty document
- [X] A image-based menu to edit the project
  http://fox-toolkit.org/screenshots/iims1.png
  - [X] Find something that can be used as example in
    https://github.com/gogglesguy/fox. I think it's an FXIconList widget
- [X] Add a 'Project' item to iconlist
**** DONE Unit tests and CI setup
     :LOGBOOK:
     CLOCK: [2022-07-15 ven. 06:23]--[2022-07-15 ven. 06:30] =>  0:07
     CLOCK: [2022-06-04 sam. 09:41]--[2022-06-04 sam. 10:08] =>  0:27
     :END:
- [X] Trying with boost.Test so we have access to all Boost-related libraries
- [X] Write our first test
  - [X] For example for editor/MainTest (currently a tutorial test)
- [X] Added a first workflow test file in .github
- [X] May use  https://github.com/actions/starter-workflows/blob/main/ci/c-cpp.yml
- [X] We have a dependency error =no packing 'fox' found=
**** DONE Correct project setup
     :LOGBOOK:
     CLOCK: [2022-04-21 jeu. 22:26]--[2022-04-21 jeu. 22:37] =>  0:11
     CLOCK: [2022-04-13 mer. 19:44]--[2022-04-13 mer. 19:55] =>  0:11
     CLOCK: [2022-04-13 mer. 17:36]--[2022-04-13 mer. 17:48] =>  0:12
     :END:
- [X] Add GPLv3 license file
- [X] Basic cmake file
- [X] Add a README.md file
- [X] Search for fox toolkit library
- [X] Handle Doxyfile and doc generation (version from cmake file)
- [X] Handle --help on editor
